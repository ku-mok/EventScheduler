openapi: 3.0.3
info:
  title: EventSchedularAPI
  version: "1"
paths:
  /event:
    get:
      tags:
        - Event
      summary: Get all events
      operationId: fetchEventsList
      parameters:
        - in: query
          name: before
          schema:
            type: string
            format: date-time
          description: Filter events before this date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                example:
                  - id: 0
                    name: "アサルトリリィ　Lost Memories"
                    place: "池袋　ブリリアホール"
                    actor: ["赤尾ひかる", "夏吉ゆうこ", "遠野ひかる", "星守紗凪", "岩田陽葵"]
                    status: "playing"
                    date: {"start": "2020-01-20", "end": "2020-01-30"}
                    sellDate: "2020-01-01"
                    goDate: ["2020-01-20", "2020-01-21"]
                    url: "https://assaultlily.jp/"
                  - id: 1
                    name: "アサルトリリィ　Lost Memories"
                    url: "https://assaultlily.jp/"
                    place: "池袋　ブリリアホール"
                    actor: ["赤尾ひかる", "夏吉ゆうこ", "遠野ひかる", "星守紗凪", "岩田陽葵"]
                    status: "playing"
                    date: {"start": "2020-01-20", "end": "2020-01-30"}
                    sellDate: "2020-01-01"
                    goDate: ["2020-01-20", "2020-01-21"]
    post:
      tags:
        - Event
      summary: Update an existing event info
      requestBody:
        $ref: '#/components/requestBodies/Event'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '405':
          description: Validation exception
  /event/{eventId}:
    get:
      tags:
        - Event
      summary: Get event by event id
      parameters:
        - name: eventId
          in: path
          description: ID of event to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid ID supplied
        '404':
          description: Event not found
    delete:
      tags:
        - Event
      summary: Delete event by event id
      parameters:
        - name: eventId
          in: path
          description: ID of event to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
    put:
      tags:
        - Event
      summary: Update an existing event info
      parameters:
        - in: path
          name: eventId
          schema:
            type: string
          required: true
          description: Event ID
      requestBody:
        $ref: '#/components/requestBodies/Event'
        required: true
      responses:
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '405':
          description: Validation exception

components: 
  requestBodies:
    Event:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Event'
      description: Event object that needs to be added to the store
      required: true
  schemas:
    Event:
        required:
          - name
          - place
          - actor
          - status
        type: object
        properties: 
          id:
            type: integer
            format: int64
          name:
            type: string
            example: "アサルトリリィ　Lost Memories"
          place:
            type: string
            example: "池袋　ブリリアホール"
          actor:
            type: array
            example: ["赤尾ひかる", "夏吉ゆうこ", "遠野ひかる", "星守紗凪", "岩田陽葵"]
          status:
            type: string
            example: "playing"
          date:
            type: object
            example: {"start": "2020-01-20", "end": "2020-01-30"}
          sellDate:
            type: string
            example: "2020-01-01"
          goDate:
            type: array
            example: ["2020-01-20", "2020-01-21"]
          url:
            type: string
            example: "https://assaultlily.jp/"
            
  